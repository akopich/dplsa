package ru.ispras.modis.topicmodels.topicmodels.regulaizers

/**
 * Created by valerij on 6/26/14.
 */

/**
 * Defines a prior distribution (possibly, improper) on \Theta matrix row (a document over topics)
 */
trait DocumentOverTopicDistributionRegularizer extends Serializable with MatrixInPlaceModification {
    /**
     *
     * @param theta a distribution of a document over topics  
     * @return the log of prior probability. Is used only for correct perplexity calculation 
     */
    def apply(theta: Array[Float]): Float

    /**
     * This implementation performs positive cut for every value of theta
     * @param thetaCnt -- the number of words in a document generated by every topic (n_{dt} counter in Vorontsov's notation)
     * @param oldTheta -- a distribution of the document over topics obtained in the previous iterations
     */
    def regularize(thetaCnt: Array[Float], oldTheta: Array[Float]): Unit = shift(thetaCnt, (x, i) => x(i) = math.max(0, x(i)))
}
